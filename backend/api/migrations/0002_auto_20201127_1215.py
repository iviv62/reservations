# Generated by Django 3.1.3 on 2020-11-27 11:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('region', models.CharField(choices=[('Благоевград', 'Благоевград'), ('Бургас', 'Бургас'), ('Варна', 'Варна'), ('Велико Търново', 'Велико Търново'), ('Видин', 'Видин'), ('Враца', 'Враца'), ('Габрово', 'Габрово'), ('Добрич', 'Добрич'), ('Кърджали', 'Кърджали'), ('Кюстендил', 'Кюстендил'), ('Ловеч', 'Ловеч'), ('Монтана', 'Монтана'), ('Пазарджик', 'Пазарджик'), ('Перник', 'Перник'), ('Плевен', 'Плевен'), ('Пловдив', 'Пловдив'), ('Разград', 'Разград'), ('Русе', 'Русе'), ('Силистра', 'Силистра'), ('Сливен', 'Сливен'), ('Смолян', 'Смолян'), ('София', 'София'), ('Стара Загора', 'Стара Загора'), ('Търговище', 'Търговище'), ('Хасково', 'Хасково'), ('Шумен', 'Шумен'), ('Ямбол', 'Ямбол')], default='София', max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.AlterModelOptions(
            name='account',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AddField(
            model_name='account',
            name='address',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='account',
            name='city',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='account',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='account',
            name='first_name',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='account',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='account',
            name='insurers',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Алианц', 'Алианц'), ('Булстрад Живот', 'Булстрад Живот'), ('България Иншурънс', 'България Иншурънс'), ('ДЗИ', 'ДЗИ'), ('ЕЗОК', 'ЕЗОК'), ('Дженерали', 'Дженерали'), ('Доверие', 'Доверие'), ('Евроинс', 'Евроинс'), ('Животозастрахователен Институт', 'Животозастрахователен институт'), ('Медико-21', 'Медико-21'), ('ОЗОК инс', 'ОЗОК инс'), ('Съгласие', 'Съгласие'), ('Уника', 'Уника'), ('FiHealth', 'FiHealth')], max_length=148),
        ),
        migrations.AddField(
            model_name='account',
            name='is_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='account',
            name='last_name',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='account',
            name='phone',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='account',
            name='region',
            field=models.CharField(blank=True, choices=[('Благоевград', 'Благоевград'), ('Бургас', 'Бургас'), ('Варна', 'Варна'), ('Велико Търново', 'Велико Търново'), ('Видин', 'Видин'), ('Враца', 'Враца'), ('Габрово', 'Габрово'), ('Добрич', 'Добрич'), ('Кърджали', 'Кърджали'), ('Кюстендил', 'Кюстендил'), ('Ловеч', 'Ловеч'), ('Монтана', 'Монтана'), ('Пазарджик', 'Пазарджик'), ('Перник', 'Перник'), ('Плевен', 'Плевен'), ('Пловдив', 'Пловдив'), ('Разград', 'Разград'), ('Русе', 'Русе'), ('Силистра', 'Силистра'), ('Сливен', 'Сливен'), ('Смолян', 'Смолян'), ('София', 'София'), ('Стара Загора', 'Стара Загора'), ('Търговище', 'Търговище'), ('Хасково', 'Хасково'), ('Шумен', 'Шумен'), ('Ямбол', 'Ямбол')], max_length=100),
        ),
        migrations.AddField(
            model_name='account',
            name='specialty',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Кариесология', 'Кариесология'), ('Ендодонтия', 'Ендодонтия'), ('Протетика', 'Протетика'), ('Детска стоматология', 'Детска стоматология'), ('Орална хирургия', 'Орална хирургия'), ('Лицево-челюстна хирургия', 'Лицево-челюстна хирургия'), ('Имплантология', 'Имплантология'), ('Ортодонтия', 'Ортодонтия'), ('Пародонтология', 'Пародонтология'), ('Профилактика', 'Профилактика'), ('Дентална алергология', 'Дентална алергология'), ('Общопрактикуващ дентален лекар', 'Общопрактикуващ дентален лекар'), ('Поливалентна дентална медицина', 'Поливалентна дентална медицина'), ('Физиотерапия', 'Физиотерапия'), ('Образна и орална диагностика', 'Образна и орална диагностика'), ('Обществено дентално здраве', 'Обществено дентално здраве'), ('Естетична дентална медицина', 'Естетична дентална медицина')], max_length=327),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='account',
            name='website',
            field=models.URLField(blank=True),
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('time_slot', models.TimeField()),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Clinic', to='api.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doc', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('time_slot', models.TimeField()),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic', to='api.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='account-images/%Y/%m/%d/')),
                ('multiImage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='works_in',
            field=models.ManyToManyField(blank=True, to='api.Clinic'),
        ),
    ]
